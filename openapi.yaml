openapi: 3.0.0
info:
  title: My API
  description: API for managing articles, programmers, and projects
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
paths:
  /articles/{id}:
    get:
      summary: Get an article by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the article to retrieve
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
    put:
      summary: Update an article by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the article to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArticle'
      responses:
        '200':
          description: OK
        '404':
          description: Article not found
    delete:
      summary: Delete an article by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the article to delete
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: Article not found
  /articles:
    post:
      summary: Add a new article
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewArticle'
      responses:
        '201':
          description: Created
  /programmers/{id}:
    get:
      summary: Get a programmer by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the programmer to retrieve
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Programmer'
    put:
      summary: Update a programmer by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the programmer to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProgrammer'
      responses:
        '200':
          description: OK
        '404':
          description: Programmer not found
    delete:
      summary: Delete a programmer by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the programmer to delete
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: Programmer not found
  /programmers:
    post:
      summary: Add a new programmer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProgrammer'
      responses:
        '201':
          description: Created
  /projects:
    get:
      summary: Get all projects
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
    post:
      summary: Add a new project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProject'
      responses:
        '201':
          description: Created
  /projects/{id}:
    get:
      summary: Get a project by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the project to retrieve
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          description: Project not found
    put:
      summary: Update a project by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the project to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProject'
      responses:
        '200':
          description: OK
        '404':
          description: Project not found
    delete:
      summary: Delete a project by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the project to delete
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: Project not found
components:
  schemas:
    Article:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the article
        projectID:
          type: string
          description: ID of the project associated with the article
        paragraph:
          type: string
          description: Content of the article
      required:
        - id
        - projectID
        - paragraph
    NewArticle:
      type: object
      properties:
        projectID:
          type: string
          description: ID of the project associated with the article
        paragraph:
          type: string
          description: Content of the article
      required:
        - projectID
        - paragraph
    UpdateArticle:
      type: object
      properties:
        projectID:
          type: string
          description: ID of the project associated with the article
        paragraph:
          type: string
          description: Content of the article
      required:
        - projectID
        - paragraph
    Programmer:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the programmer
        name:
          type: string
          description: Name of the programmer
        age:
          type: integer
          description: Age of the programmer
      required:
        - id
        - name
        - age
    NewProgrammer:
      type: object
      properties:
        name:
          type: string
          description: Name of the programmer
        age:
          type: integer
          description: Age of the programmer
      required:
        - name
        - age
    UpdateProgrammer:
      type: object
      properties:
        name:
          type: string
          description: Name of the programmer
        age:
          type: integer
          description: Age of the programmer
      required:
        - name
        - age
    Project:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier of the project
        name:
          type: string
          description: Name of the project
        languages:
          type: array
          items:
            type: string
          description: List of programming languages used in the project
        skills:
          type: array
          items:
            type: string
          description: List of skills required for the project
        programmerID:
          type: string
          description: ID of the programmer associated with the project
      required:
        - id
        - name
        - languages
        - skills
        - programmerID
    NewProject:
      type: object
      properties:
        name:
          type: string
          description: Name of the project
        languages:
          type: array
          items:
            type: string
          description: List of programming languages used in the project
        skills:
          type: array
          items:
            type: string
          description: List of skills required for the project
        programmerID:
          type: string
          description: ID of the programmer associated with the project
      required:
        - name
        - languages
        - skills
        - programmerID
    UpdateProject:
      type: object
      properties:
        name:
          type: string
          description: Name of the project
        languages:
          type: array
          items:
            type: string
          description: List of programming languages used in the project
        skills:
          type: array
          items:
            type: string
          description: List of skills required for the project
        programmerID:
          type: string
          description: ID of the programmer associated with the project
      required:
        - name
        - languages
        - skills
        - programmerID
